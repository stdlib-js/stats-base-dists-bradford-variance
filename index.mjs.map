{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan';\nimport ln from '@stdlib/math-base-special-ln';\n\n\n// MAIN //\n\n/**\n* Returns the variance of a Bradford distribution.\n*\n* @param {PositiveNumber} c - shape parameter\n* @returns {PositiveNumber} variance\n*\n* @example\n* var v = variance( 0.1 );\n* // returns ~0.083\n*\n* @example\n* var v = variance( 0.5 );\n* // returns ~0.083\n*\n* @example\n* var v = variance( 10.0 );\n* // returns ~0.076\n*\n* @example\n* var v = variance( 0.0 );\n* // returns NaN\n*\n* @example\n* var v = variance( -1.0 );\n* // returns NaN\n*\n* @example\n* var v = variance( NaN );\n* // returns NaN\n*/\nfunction variance( c ) {\n\tvar k;\n\tif (\n\t\tisnan( c ) ||\n\t\tc <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tk = ln( 1.0 + c );\n\treturn ( ( ( 2.0+c ) * k ) - ( 2.0*c ) ) / ( 2.0*c*k*k );\n}\n\n\n// EXPORTS //\n\nexport default variance;\n"],"names":["variance","c","k","isnan","NaN","ln"],"mappings":";;iMA0DA,SAASA,EAAUC,GAClB,IAAIC,EACJ,OACCC,EAAOF,IACPA,GAAK,EAEEG,MAGK,EAAIH,IADjBC,EAAIG,EAAI,EAAMJ,IACiB,EAAIA,IAAU,EAAIA,EAAEC,EAAEA,EACtD"}